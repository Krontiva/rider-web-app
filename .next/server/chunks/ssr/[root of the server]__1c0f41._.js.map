{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/dibelaba/Documents/GitHub/rider-web-app/src/app/orders/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { use } from 'react';\n\ninterface Order {\n  id: string;\n  customerName: string;\n  orderNumber: string;\n  orderStatus: string;\n  pickup: Array<{\n    fromAddress: string;\n    fromLatitude?: number;\n    fromLongitude?: number;\n  }>;\n  dropOff: Array<{\n    toAddress: string;\n  }>;\n  deliveryPrice: number;\n  batchID?: string;\n  batchedOrderNumbers?: number[];\n  courierName: string;\n  orderReceivedTime: string;\n  orderPickedupTime: string;\n  orderOnmywayTime: string;\n  customerPhoneNumber: string;\n  distance?: number;\n  courierOtp?: string;\n}\n\nconst STATUS_COLORS = {\n  ReadyForPickup: {\n    background: '#DEE9FF',\n    text: '#4A6FA5'\n  },\n  Assigned: {\n    background: '#FFFCAD',\n    text: '#8B8654'\n  },\n  'Pickup': {\n    background: '#EDEDED',\n    text: '#666666'\n  },\n  OnTheWay: {\n    background: '#FFD9AD',\n    text: '#A67B4D'\n  },\n  Delivered: {\n    background: '#D2FFAD',\n    text: '#5C8C3E'\n  },\n  Cancelled: {\n    background: '#FFBDAD',\n    text: '#A65D45'\n  },\n  DeliveryFailed: {\n    background: '#000000',\n    text: '#FFFFFF'\n  },\n  Completed: {\n    background: '#D2FFAD',\n    text: '#5C8C3E'\n  }\n} as const;\n\nexport default function OrderDetails({ params }: { params: Promise<{ id: string }> }) {\n  const { id } = use(params);\n  const [order, setOrder] = useState<Order | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [courierOtp, setCourierOtp] = useState('');\n  const [showCourierOtp, setShowCourierOtp] = useState(false);\n  const [isVerifyingCourierOtp, setIsVerifyingCourierOtp] = useState(false);\n  const [otp, setOtp] = useState('');\n  const [showOtpInput, setShowOtpInput] = useState(false);\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [isPickingUp, setIsPickingUp] = useState(false);\n  const [isDelivering, setIsDelivering] = useState(false);\n  const [showDropoffOtp, setShowDropoffOtp] = useState(false);\n  const [dropoffOtp, setDropoffOtp] = useState('');\n  const [isVerifyingDropoff, setIsVerifyingDropoff] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const router = useRouter();\n\n  useEffect(() => {\n    const fetchOrderDetails = async () => {\n      try {\n        const authToken = localStorage.getItem('authToken');\n        if (!authToken) {\n          router.push('/');\n          return;\n        }\n\n        // Get user details to get phone number\n        const userResponse = await fetch('https://api-server.krontiva.africa/api:uEBBwbSs/auth/me', {\n          headers: {\n            'X-Xano-Authorization': `Bearer ${authToken}`,\n            'X-Xano-Authorization-Only': 'true',\n          }\n        });\n\n        if (!userResponse.ok) {\n          throw new Error('Failed to get user details');\n        }\n\n        const userData = await userResponse.json();\n        setPhoneNumber(userData.phoneNumber);\n\n        // Fetch order details\n        const response = await fetch(\n          `https://api-server.krontiva.africa/api:uEBBwbSs/delikaquickshipper_orders_table/${id}`,\n          {\n            headers: {\n              'X-Xano-Authorization': `Bearer ${authToken}`,\n            }\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch order details');\n        }\n\n        const orderData = await response.json();\n        setOrder(orderData);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load order details');\n        console.error('Error fetching order:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchOrderDetails();\n  }, [id, router]);\n\n  const handleOtpSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsVerifying(true);\n\n    try {\n      // Verify OTP\n      const verifyResponse = await fetch('https://api-server.krontiva.africa/api:uEBBwbSs/verify/otp/code/phoneNumber', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          OTP: parseInt(otp),\n          contact: phoneNumber\n        })\n      });\n\n      if (!verifyResponse.ok) {\n        throw new Error('Invalid OTP code');\n      }\n\n      const verifyData = await verifyResponse.json();\n      \n      if (!verifyData.otpValidate) {\n        throw new Error('Invalid OTP code');\n      }\n\n      setShowOtpInput(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Verification failed');\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n\n  const handleResendOtp = async () => {\n    setError('');\n    setIsVerifying(true);\n\n    try {\n      const response = await fetch('https://api-server.krontiva.africa/api:uEBBwbSs/auth/login/phoneNumber/rider', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          phoneNumber: phoneNumber\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to resend OTP');\n      }\n\n      alert('OTP resent successfully');\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to resend OTP');\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n\n  const handleViewRoute = () => {\n    if (!order) return;\n\n    const origin = encodeURIComponent(order.pickup?.[0]?.fromAddress || '');\n    const destination = encodeURIComponent(order.dropOff?.[0]?.toAddress || '');\n    const url = `https://www.google.com/maps/dir/?api=1&origin=${origin}&destination=${destination}`;\n    window.open(url, '_blank');\n  };\n\n  const handleCall = (phoneNumber: string) => {\n    window.location.href = `tel:${phoneNumber}`;\n  };\n\n  const getStatusColors = (status: string) => {\n    return STATUS_COLORS[status as keyof typeof STATUS_COLORS] || STATUS_COLORS.ReadyForPickup;\n  };\n\n  const handlePickup = async () => {\n    if (!order) return;\n    \n    setIsPickingUp(true);\n    try {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        router.push('/');\n        return;\n      }\n\n      const response = await fetch(\n        `https://api-server.krontiva.africa/api:uEBBwbSs/delikaquickshipper_orders_table/${order.id}`,\n        {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Xano-Authorization': `Bearer ${authToken}`,\n          },\n          body: JSON.stringify({\n            orderStatus: 'Pickup',\n            orderPickedupTime: new Date().toISOString(),\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Failed to update order status');\n      }\n\n      // Update local order state\n      setOrder(prev => prev ? {\n        ...prev,\n        orderStatus: 'Pickup',\n        orderPickedupTime: new Date().toISOString(),\n      } : null);\n\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Failed to update order status');\n      console.error('Error updating order:', error);\n    } finally {\n      setIsPickingUp(false);\n    }\n  };\n\n  const handleDeliver = async () => {\n    if (!order) return;\n    \n    setIsDelivering(true);\n    try {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        router.push('/');\n        return;\n      }\n\n      const response = await fetch(\n        `https://api-server.krontiva.africa/api:uEBBwbSs/delikaquickshipper_orders_table/${order.id}`,\n        {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Xano-Authorization': `Bearer ${authToken}`,\n          },\n          body: JSON.stringify({\n            orderStatus: 'OnTheWay',\n            orderOnmywayTime: new Date().toISOString(),\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Failed to update order status');\n      }\n\n      // Update local order state\n      setOrder(prev => prev ? {\n        ...prev,\n        orderStatus: 'OnTheWay',\n        orderOnmywayTime: new Date().toISOString(),\n      } : null);\n\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Failed to update order status');\n      console.error('Error updating order:', error);\n    } finally {\n      setIsDelivering(false);\n    }\n  };\n\n  const handleDropoffOtpSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsVerifyingDropoff(true);\n\n    try {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        router.push('/');\n        return;\n      }\n\n      // Verify OTP using the completion endpoint\n      const verifyResponse = await fetch('https://api-server.krontiva.africa/api:uEBBwbSs/verifyCompletion', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          orderOTP: dropoffOtp\n        })\n      });\n\n      if (!verifyResponse.ok) {\n        throw new Error('Failed to verify OTP');\n      }\n\n      const verifyData = await verifyResponse.json();\n      \n      if (!verifyData) {\n        throw new Error('Invalid OTP code. Please check with the customer and try again.');\n      }\n\n      // If OTP is valid, update order status to Delivered\n      const updateResponse = await fetch(\n        `https://api-server.krontiva.africa/api:uEBBwbSs/delikaquickshipper_orders_table/${order?.id}`,\n        {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Xano-Authorization': `Bearer ${authToken}`,\n          },\n          body: JSON.stringify({\n            orderStatus: 'Delivered',\n            orderCompletedTime: new Date().toISOString(),\n          }),\n        }\n      );\n\n      if (!updateResponse.ok) {\n        throw new Error('Failed to update order status');\n      }\n\n      // Update local order state\n      setOrder(prev => prev ? {\n        ...prev,\n        orderStatus: 'Delivered',\n        orderCompletedTime: new Date().toISOString(),\n      } : null);\n\n      setShowDropoffOtp(false);\n      setDropoffOtp('');\n      setShowSuccess(true);\n\n      // Hide success message after 3 seconds\n      setTimeout(() => {\n        setShowSuccess(false);\n        router.push('/orders');\n      }, 3000);\n\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Verification failed');\n    } finally {\n      setIsVerifyingDropoff(false);\n    }\n  };\n\n  const handleCourierOtpSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsVerifyingCourierOtp(true);\n\n    try {\n      if (!order || courierOtp !== order.courierOtp) {\n        throw new Error('Invalid courier OTP code');\n      }\n\n      // If OTP matches, proceed with pickup\n      await handlePickup();\n      setShowCourierOtp(false);\n      setCourierOtp('');\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Verification failed');\n    } finally {\n      setIsVerifyingCourierOtp(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-white p-4\">\n        <div className=\"max-w-2xl mx-auto\">\n          <div className=\"animate-pulse space-y-4\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n            <div className=\"h-32 bg-gray-200 rounded\"></div>\n            <div className=\"h-32 bg-gray-200 rounded\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-white p-4\">\n        <div className=\"max-w-2xl mx-auto\">\n          <div className=\"text-red-500 text-center\">{error}</div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!order) {\n    return (\n      <div className=\"min-h-screen bg-white p-4\">\n        <div className=\"max-w-2xl mx-auto\">\n          <div className=\"text-center\">Order not found</div>\n        </div>\n      </div>\n    );\n  }\n\n  if (showOtpInput) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-white px-4\">\n        <div className=\"max-w-md w-full space-y-8 p-4 md:p-8\">\n          <div>\n            <h2 className=\"mt-6 text-center text-3xl font-bold text-black\">\n              Enter Verification Code\n            </h2>\n            <p className=\"mt-2 text-center text-sm text-gray-600\">\n              We sent a code to {phoneNumber}\n            </p>\n          </div>\n          <form className=\"mt-8 space-y-6\" onSubmit={handleOtpSubmit}>\n            <div className=\"rounded-md shadow-sm space-y-4\">\n              <div>\n                <label htmlFor=\"otp\" className=\"sr-only\">\n                  Verification Code\n                </label>\n                <input\n                  id=\"otp\"\n                  name=\"otp\"\n                  type=\"text\"\n                  inputMode=\"numeric\"\n                  pattern=\"\\d*\"\n                  maxLength={4}\n                  required\n                  className=\"appearance-none rounded-lg relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-[#FE5B18] focus:border-[#FE5B18] text-center text-2xl tracking-widest\"\n                  placeholder=\"••••\"\n                  value={otp}\n                  onChange={(e) => setOtp(e.target.value.replace(/\\D/g, ''))}\n                  disabled={isVerifying}\n                />\n                <button\n                  type=\"button\"\n                  onClick={handleResendOtp}\n                  disabled={isVerifying}\n                  className=\"mt-2 text-sm text-[#FE5B18] hover:text-[#e54d0e] disabled:opacity-50\"\n                >\n                  Resend Code\n                </button>\n              </div>\n            </div>\n\n            {error && (\n              <div className=\"text-red-500 text-sm text-center\">\n                {error}\n              </div>\n            )}\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={isVerifying}\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-[#FE5B18] hover:bg-[#e54d0e] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FE5B18] disabled:opacity-50\"\n              >\n                {isVerifying ? (\n                  <span className=\"flex items-center\">\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\n                    </svg>\n                    Verifying...\n                  </span>\n                ) : 'Verify'}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  if (showCourierOtp) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-white px-4\">\n        <div className=\"max-w-md w-full space-y-8 p-4 md:p-8\">\n          <div>\n            <h2 className=\"mt-6 text-center text-3xl font-bold text-black\">\n              Enter Restaurant OTP\n            </h2>\n            <p className=\"mt-2 text-center text-sm text-gray-600\">\n              Please enter the OTP provided by the restaurant\n            </p>\n          </div>\n          <form className=\"mt-8 space-y-6\" onSubmit={handleCourierOtpSubmit}>\n            <div className=\"rounded-md shadow-sm space-y-4\">\n              <div>\n                <label htmlFor=\"courierOtp\" className=\"sr-only\">\n                  Restaurant OTP\n                </label>\n                <input\n                  id=\"courierOtp\"\n                  name=\"courierOtp\"\n                  type=\"text\"\n                  inputMode=\"numeric\"\n                  pattern=\"\\d*\"\n                  maxLength={4}\n                  required\n                  className=\"appearance-none rounded-lg relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-[#FE5B18] focus:border-[#FE5B18] text-center text-2xl tracking-widest\"\n                  placeholder=\"••••\"\n                  value={courierOtp}\n                  onChange={(e) => setCourierOtp(e.target.value.replace(/\\D/g, ''))}\n                  disabled={isVerifyingCourierOtp}\n                />\n              </div>\n            </div>\n\n            {error && (\n              <div className=\"text-red-500 text-sm text-center\">\n                {error}\n              </div>\n            )}\n\n            <div className=\"flex gap-4\">\n              <button\n                type=\"submit\"\n                disabled={isVerifyingCourierOtp}\n                className=\"flex-1 group relative flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-[#FE5B18] hover:bg-[#e54d0e] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FE5B18] disabled:opacity-50\"\n              >\n                {isVerifyingCourierOtp ? (\n                  <span className=\"flex items-center\">\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\n                    </svg>\n                    Verifying...\n                  </span>\n                ) : 'Verify'}\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setShowCourierOtp(false)}\n                disabled={isVerifyingCourierOtp}\n                className=\"flex-1 py-2 px-4 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#FE5B18] disabled:opacity-50\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <div className=\"px-4 py-6 md:p-6 max-w-2xl mx-auto\">\n        <div className=\"flex items-center gap-4 mb-6\">\n          <button\n            onClick={() => router.back()}\n            className=\"text-gray-600 hover:text-[#FE5B18]\"\n          >\n            <svg \n              className=\"w-6 h-6\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n            </svg>\n          </button>\n          <h1 className=\"text-2xl font-bold text-black\">Order Details</h1>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6 space-y-6\">\n          {/* Order Header */}\n          <div className=\"flex justify-between items-start\">\n            <div>\n              <h2 className=\"text-xl font-semibold text-black\">{order.customerName}</h2>\n              <div className=\"flex items-center gap-3 mt-1\">\n                <p className=\"text-gray-500\">#{String(order.orderNumber).padStart(3, '0')}</p>\n                {order.customerPhoneNumber && (\n                  <button \n                    onClick={() => handleCall(order.customerPhoneNumber)}\n                    className=\"text-[#FE5B18] text-sm flex items-center\"\n                  >\n                    <svg \n                      className=\"w-4 h-4 mr-1\" \n                      fill=\"currentColor\" \n                      viewBox=\"0 0 20 20\"\n                    >\n                      <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\n                    </svg>\n                    {order.customerPhoneNumber}\n                  </button>\n                )}\n              </div>\n            </div>\n            <span \n              className=\"px-3 py-1 rounded-full text-sm\"\n              style={{\n                backgroundColor: getStatusColors(order.orderStatus).background,\n                color: getStatusColors(order.orderStatus).text\n              }}\n            >\n              {order.orderStatus}\n            </span>\n          </div>\n\n          {/* Order Details */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h3 className=\"font-semibold mb-2 text-black\">Pickup Location</h3>\n              <p className=\"text-gray-600\">\n                {order.pickup?.[0]?.fromAddress || 'N/A'}\n              </p>\n            </div>\n            <div>\n              <h3 className=\"font-semibold mb-2 text-black\">Dropoff Location</h3>\n              <p className=\"text-gray-600\">\n                {order.dropOff?.[0]?.toAddress || 'N/A'}\n              </p>\n            </div>\n          </div>\n\n          {/* Order Timeline */}\n          <div>\n            <h3 className=\"font-semibold mb-3 text-black\">Order Timeline</h3>\n            <div className=\"space-y-2\">\n              {order.orderReceivedTime && (\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-[#FE5B18]\"></div>\n                  <p className=\"text-sm text-gray-600\">\n                    Order Received: {new Date(order.orderReceivedTime).toLocaleString()}\n                  </p>\n                </div>\n              )}\n              {order.orderPickedupTime && (\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-[#FE5B18]\"></div>\n                  <p className=\"text-sm text-gray-600\">\n                    Picked Up: {new Date(order.orderPickedupTime).toLocaleString()}\n                  </p>\n                </div>\n              )}\n              {order.orderOnmywayTime && (\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-[#FE5B18]\"></div>\n                  <p className=\"text-sm text-gray-600\">\n                    On the Way: {new Date(order.orderOnmywayTime).toLocaleString()}\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Order Summary */}\n          <div className=\"border-t pt-4\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Delivery Price</p>\n                <p className=\"text-xl font-bold text-black\">\n                  {(order.deliveryPrice || 0)} GHS\n                </p>\n              </div>\n              <div className=\"flex items-center gap-4\">\n                {order.orderStatus === 'Assigned' && (\n                  <button \n                    onClick={() => setShowCourierOtp(true)}\n                    disabled={isPickingUp}\n                    className=\"text-white font-medium flex items-center bg-[#FE5B18] px-4 py-2 rounded-md hover:bg-[#e54d0e] disabled:opacity-50\"\n                  >\n                    {isPickingUp ? (\n                      <span className=\"flex items-center\">\n                        <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\n                        </svg>\n                        Picking Up...\n                      </span>\n                    ) : (\n                      <>\n                        <svg \n                          className=\"w-4 h-4 mr-1\" \n                          fill=\"none\" \n                          stroke=\"currentColor\" \n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                        </svg>\n                        Pickup\n                      </>\n                    )}\n                  </button>\n                )}\n                {order.orderStatus === 'Pickup' && (\n                  <button \n                    onClick={handleDeliver}\n                    disabled={isDelivering}\n                    className=\"text-white font-medium flex items-center bg-[#FE5B18] px-4 py-2 rounded-md hover:bg-[#e54d0e] disabled:opacity-50\"\n                  >\n                    {isDelivering ? (\n                      <span className=\"flex items-center\">\n                        <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\n                        </svg>\n                        Starting Delivery...\n                      </span>\n                    ) : (\n                      <>\n                        <svg \n                          className=\"w-4 h-4 mr-1\" \n                          fill=\"none\" \n                          stroke=\"currentColor\" \n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                        </svg>\n                        Deliver Item\n                      </>\n                    )}\n                  </button>\n                )}\n                {order.orderStatus === 'OnTheWay' && (\n                  <button \n                    onClick={() => setShowDropoffOtp(true)}\n                    className=\"text-white font-medium flex items-center bg-[#FE5B18] px-4 py-2 rounded-md hover:bg-[#e54d0e]\"\n                  >\n                    <svg \n                      className=\"w-4 h-4 mr-1\" \n                      fill=\"none\" \n                      stroke=\"currentColor\" \n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                    Drop off\n                  </button>\n                )}\n                {order.orderStatus !== 'Delivered' && order.orderStatus !== 'Cancelled' && (\n                  <button \n                    className=\"text-[#FE5B18] font-medium flex items-center\"\n                    onClick={handleViewRoute}\n                  >\n                    <svg \n                      className=\"w-4 h-4 mr-1\" \n                      fill=\"currentColor\" \n                      viewBox=\"0 0 20 20\"\n                    >\n                      <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zM7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 2.88-2.88 7.19-5 9.88C9.92 16.21 7 11.85 7 9z\"/>\n                      <circle cx=\"12\" cy=\"9\" r=\"2.5\"/>\n                    </svg>\n                    Show Route\n                  </button>\n                )}\n              </div>\n            </div>\n\n            {/* Drop off OTP Section */}\n            {showDropoffOtp && order.orderStatus === 'OnTheWay' && (\n              <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n                <h3 className=\"text-lg font-semibold mb-3\">Verify Drop off</h3>\n                <p className=\"text-sm text-gray-600 mb-4\">\n                  Enter the 4-digit code provided by the customer to complete the delivery.\n                </p>\n                <form onSubmit={handleDropoffOtpSubmit} className=\"space-y-4\">\n                  <div>\n                    <input\n                      type=\"text\"\n                      inputMode=\"numeric\"\n                      pattern=\"\\d*\"\n                      maxLength={4}\n                      required\n                      className=\"appearance-none rounded-lg relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-[#FE5B18] focus:border-[#FE5B18] text-center text-2xl tracking-widest\"\n                      placeholder=\"••••\"\n                      value={dropoffOtp}\n                      onChange={(e) => setDropoffOtp(e.target.value.replace(/\\D/g, ''))}\n                      disabled={isVerifyingDropoff}\n                    />\n                  </div>\n\n                  {error && (\n                    <div className=\"text-red-500 text-sm text-center\">\n                      {error}\n                    </div>\n                  )}\n\n                  <div className=\"flex gap-4\">\n                    <button\n                      type=\"submit\"\n                      disabled={isVerifyingDropoff}\n                      className=\"flex-1 text-white font-medium flex items-center justify-center bg-[#FE5B18] px-4 py-2 rounded-md hover:bg-[#e54d0e] disabled:opacity-50\"\n                    >\n                      {isVerifyingDropoff ? (\n                        <span className=\"flex items-center\">\n                          <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n                            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\n                          </svg>\n                          Verifying...\n                        </span>\n                      ) : 'Verify & Complete Delivery'}\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowDropoffOtp(false)}\n                      disabled={isVerifyingDropoff}\n                      className=\"text-gray-600 font-medium flex items-center justify-center px-4 py-2 rounded-md hover:bg-gray-100 disabled:opacity-50\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </form>\n              </div>\n            )}\n\n            {/* Success Message */}\n            {showSuccess && (\n              <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n                <div className=\"bg-white rounded-lg p-8 max-w-sm w-full mx-4 text-center\">\n                  <div className=\"w-24 h-24 mx-auto mb-4\">\n                    <svg \n                      className=\"w-full h-full text-green-500\" \n                      fill=\"none\" \n                      stroke=\"currentColor\" \n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path \n                        strokeLinecap=\"round\" \n                        strokeLinejoin=\"round\" \n                        strokeWidth={2} \n                        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" \n                      />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Delivery Completed!</h3>\n                  <p className=\"text-gray-600\">The order has been successfully delivered.</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1590, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}